package ui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import model.Curso;
import service.Estatisticas;
import service.Leitura;


public class Inicio1 extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Inicio1.class.getName());

    private transient List<Curso> listaCursos;

    public Inicio1() {
        carregarDados();
        initComponents();
        atualizarEstatisticasGerais();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        // Inicialização dos componentes
        btnAnalisar = new javax.swing.JButton();
        graficoLinhaPanel = new ui.GraficoLinha();
        graficoPizzaPanel = new ui.GraficoPizza();
        jComboBoxCursos = new javax.swing.JComboBox<>();
        lblMediaCursoValor = new javax.swing.JLabel();
        lblMediaGeralValor = new javax.swing.JLabel();
        
        // JPanels
        javax.swing.JPanel painelTopo = new javax.swing.JPanel();
        javax.swing.JPanel painelCentral = new javax.swing.JPanel();
        javax.swing.JPanel painelDireito = new javax.swing.JPanel();
        javax.swing.JPanel painelInferior = new javax.swing.JPanel();
        javax.swing.JPanel painelMedias = new javax.swing.JPanel();

        // JScrollPanes e JTextAreas
        javax.swing.JScrollPane scrollPaneCampus = new javax.swing.JScrollPane();
        javax.swing.JScrollPane scrollPaneCotas = new javax.swing.JScrollPane();
        javax.swing.JScrollPane scrollPaneGrau = new javax.swing.JScrollPane();
        javax.swing.JScrollPane scrollPaneTurno = new javax.swing.JScrollPane();
        txtResultadosCampusGeral = new javax.swing.JTextArea();
        txtResultadosCotasCurso = new javax.swing.JTextArea();
        txtResultadosGrauGeral = new javax.swing.JTextArea();
        txtResultadosTurnoGeral = new javax.swing.JTextArea();
        
        // --- CONFIGURAÇÃO DA JANELA PRINCIPAL ---
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Análise de Dados SISU");
        setLayout(new BorderLayout(10, 10));
        setSize(1000, 720);
        setLocationRelativeTo(null);

        // --- PAINEL TOPO ---
        painelTopo.setBorder(new javax.swing.border.TitledBorder("Seleção de Curso"));
        painelTopo.setLayout(new FlowLayout(FlowLayout.LEFT));
        
        if (listaCursos != null) {
            for (Curso c : listaCursos) {
                jComboBoxCursos.addItem(c);
            }
        }
        jComboBoxCursos.setPreferredSize(new Dimension(550, 25));
        painelTopo.add(jComboBoxCursos);

        btnAnalisar.setText("Analisar Curso Selecionado");
        btnAnalisar.addActionListener(this::analisarCursoAction);
        painelTopo.add(btnAnalisar);
        add(painelTopo, BorderLayout.NORTH);

        // --- PAINEL CENTRAL (GRÁFICOS) ---
        painelCentral.setBorder(new javax.swing.border.TitledBorder("Visualização Gráfica"));
        painelCentral.setLayout(new GridLayout(1, 2, 10, 10));

        graficoPizzaPanel.setBorder(new javax.swing.border.TitledBorder("Distribuição de Vagas por Cota (%)"));
        painelCentral.add(graficoPizzaPanel);
        
        graficoLinhaPanel.setBorder(new javax.swing.border.TitledBorder("Distribuição de Notas (Curso)"));
        painelCentral.add(graficoLinhaPanel);
        add(painelCentral, BorderLayout.CENTER);

        // --- PAINEL DIREITO (ANÁLISE DO CURSO) ---
        painelDireito.setBorder(new javax.swing.border.TitledBorder("Análise do Curso Selecionado"));
        painelDireito.setLayout(new BorderLayout(5, 5));
        
        painelMedias.setLayout(new GridLayout(2, 2, 5, 5));
        painelMedias.add(new javax.swing.JLabel("Média Geral (Todos):"));
        lblMediaGeralValor.setText("N/A");
        painelMedias.add(lblMediaGeralValor);
        painelMedias.add(new javax.swing.JLabel("Média do Curso:"));
        lblMediaCursoValor.setText("N/A");
        painelMedias.add(lblMediaCursoValor);
        painelDireito.add(painelMedias, BorderLayout.NORTH);

        formatarTextArea(txtResultadosCotasCurso);
        scrollPaneCotas.setBorder(new javax.swing.border.TitledBorder("Notas de Corte por Cota"));
        scrollPaneCotas.setViewportView(txtResultadosCotasCurso);
        painelDireito.add(scrollPaneCotas, BorderLayout.CENTER);
        add(painelDireito, BorderLayout.EAST);
        
        // --- PAINEL INFERIOR (ESTATÍSTICAS GERAIS) ---
        painelInferior.setBorder(new javax.swing.border.TitledBorder("Estatísticas Gerais (Todos os Cursos)"));
        painelInferior.setLayout(new GridLayout(1, 3, 10, 10));

        formatarTextArea(txtResultadosCampusGeral);
        scrollPaneCampus.setBorder(new javax.swing.border.TitledBorder("Candidatos por Campus"));
        scrollPaneCampus.setViewportView(txtResultadosCampusGeral);
        painelInferior.add(scrollPaneCampus);

        formatarTextArea(txtResultadosTurnoGeral);
        scrollPaneTurno.setBorder(new javax.swing.border.TitledBorder("Candidatos por Turno"));
        scrollPaneTurno.setViewportView(txtResultadosTurnoGeral);
        painelInferior.add(scrollPaneTurno);

        formatarTextArea(txtResultadosGrauGeral);
        scrollPaneGrau.setBorder(new javax.swing.border.TitledBorder("Candidatos por Grau (BAC/LIC)"));
        scrollPaneGrau.setViewportView(txtResultadosGrauGeral);
        painelInferior.add(scrollPaneGrau);
        add(painelInferior, BorderLayout.SOUTH);
        
        pack();
    }// </editor-fold>
    
    private void analisarCursoAction(java.awt.event.ActionEvent evt) {                                      
        Curso cursoSelecionado = (Curso) jComboBoxCursos.getSelectedItem();
        if (cursoSelecionado == null) return;

        lblMediaCursoValor.setText(String.format("%.2f", Estatisticas.getMediaPorCurso(cursoSelecionado)));

        String[] todasAsCotas = {"AC", "LB_PPI", "LB_Q", "LB_PCD", "LB_EP", "LI_PPI", "LI_Q", "LI_PCD", "LI_EP", "V"};

        Map<String, Double> notasCorte = Estatisticas.getNotasDeCortePorCota(cursoSelecionado);
        txtResultadosCotasCurso.setText(formatarNotasDeCorte(todasAsCotas, notasCorte));
        
        List<Double> porcCotas = Estatisticas.getDistribuicaoVagas(cursoSelecionado, todasAsCotas);
        graficoPizzaPanel.atualizarDados(todasAsCotas, porcCotas);
        
        graficoLinhaPanel.setNotas(Estatisticas.getNotasOrdenadas(cursoSelecionado));
    }
    
    private void carregarDados() {
        String caminhoArquivo = "src/main/resources/dados.csv"; 
        listaCursos = Leitura.inserirPessoas(caminhoArquivo);

        if (listaCursos == null || listaCursos.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Não foi possível carregar os dados do arquivo.\n" +
                    "Verifique o caminho e o conteúdo de: " + caminhoArquivo,
                    "Erro de Carregamento",
                    JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        } else {
            listaCursos.sort(Comparator.comparing(Curso::toString));
        }
        Estatisticas.setCursos(listaCursos);
    }
    
    private void atualizarEstatisticasGerais() {
        lblMediaGeralValor.setText(String.format("%.2f", Estatisticas.getMediaGeral()));

        String[] categoriasCampus = {"SAO CRISTOVAO", "ARACAJU", "ITABAIANA", "CAMPUS DO SERTAO", "LARANJEIRAS"};
        List<Double> porcCampus = Estatisticas.campi();
        txtResultadosCampusGeral.setText(formatarResultadosGerais(categoriasCampus, porcCampus));
        
        String[] categoriasTurno = {"MATUTINO", "NOTURNO", "VESPERTINO", "INTEGRAL"};
        List<Double> porcTurno = Estatisticas.turnos();
        txtResultadosTurnoGeral.setText(formatarResultadosGerais(categoriasTurno, porcTurno));
        
        String[] categoriasGrau = {"BAC", "LIC"};
        List<Double> porcGrau = Estatisticas.grau(listaCursos);
        txtResultadosGrauGeral.setText(formatarResultadosGerais(categoriasGrau, porcGrau));
    }
    
    private void formatarTextArea(javax.swing.JTextArea textArea) {
        textArea.setEditable(false);
        textArea.setFont(new Font("Monospaced", Font.PLAIN, 12));
    }
    
    private String formatarNotasDeCorte(String[] cotas, Map<String, Double> notas) {
        StringBuilder sb = new StringBuilder();
        if (notas == null) return "Dados indisponíveis.";
        
        for (String cota : cotas) {
            double notaDeCorte = notas.getOrDefault(cota, 0.0);
            sb.append(String.format("%-10s: %.2f\n", cota, notaDeCorte));
        }
        return sb.toString();
    }

    private String formatarResultadosGerais(String[] categorias, List<Double> valores) {
        StringBuilder sb = new StringBuilder();
        if (valores == null || valores.isEmpty()) return "Dados indisponíveis.";
        for (int i = 0; i < categorias.length; i++) {
            sb.append(String.format("%-18s: %.2f%%\n", categorias[i], valores.get(i)));
        }
        return sb.toString();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Inicio1().setVisible(true));
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnAnalisar;
    private ui.GraficoLinha graficoLinhaPanel;
    private ui.GraficoPizza graficoPizzaPanel;
    private javax.swing.JComboBox<Curso> jComboBoxCursos;
    private javax.swing.JLabel lblMediaCursoValor;
    private javax.swing.JLabel lblMediaGeralValor;
    private javax.swing.JTextArea txtResultadosCampusGeral;
    private javax.swing.JTextArea txtResultadosCotasCurso;
    private javax.swing.JTextArea txtResultadosGrauGeral;
    private javax.swing.JTextArea txtResultadosTurnoGeral;
    // End of variables declaration
}
